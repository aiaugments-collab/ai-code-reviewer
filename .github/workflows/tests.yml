name: Run Tests

on:
    pull_request:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.7

            - name: Set up environment variables
              run: cp .env.example .env

            - name: Create network
              run: docker network create kodus-backend-services-test

            - name: Docker Compose Action UP
              uses: hoverkraft-tech/compose-action@v2.0.1
              with:
                  compose-file: ./docker-compose.test.yml
                  up-flags: "-d"

            - name: Cache Yarn dependencies
              uses: actions/cache@v4.0.2
              with:
                  path: |
                      .yarn/cache
                      **/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn install

            - name: Run migrations
              run: yarn migration:run

            - name: Run tests
              run: API_NODE_ENV=test yarn test

            - name: Docker Compose Action Cleanup
              uses: hoverkraft-tech/compose-action@v2.0.1
              with:
                  compose-file: ./docker-compose.test.yml
                  down-flags: "-v"

            - name: Comment on PR if tests fail
              if: failure()
              uses: actions/github-script@v7.0.1
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  script: |
                      const issue_number = context.payload.pull_request.number;
                      const user = context.payload.pull_request.user.login;
                      const message = `@${user}, os testes falharam. Por favor, verifique os erros e faça as correções necessárias.`;
                      github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: issue_number,
                        body: message,
                      });

            - name: Notify Discord on Deploy Failure
              if: failure()
              uses: sarisia/actions-status-discord@v1.13.0
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  status: ${{ job.status }}
                  content: "❌ Falha nos testes para o PR: ${{ github.event.pull_request.title }} Autor: @${{ github.event.pull_request.user.login }}"
                  username: GitHub Actions
