[
    {
        "slug": "style-conventions",
        "title": "Style & Conventions",
        "description": "Consistent formatting, naming, imports, and typing across the codebase."
    },
    {
        "slug": "duplication-complexity",
        "title": "Duplication & Complexity",
        "description": "Eliminate duplicate logic/config and reduce unnecessary complexity."
    },
    {
        "slug": "readability-refactor",
        "title": "Readability & Refactor",
        "description": "Refactor for clarity; extract functions; simplify control flow."
    },
    {
        "slug": "error-handling",
        "title": "Error Handling",
        "description": "Handle errors explicitly; avoid silent failures; propagate safely."
    },
    {
        "slug": "observability-logging",
        "title": "Observability & Logging",
        "description": "Use structured logs with context; enable traceability."
    },
    {
        "slug": "ui-robustness",
        "title": "UI Robustness",
        "description": "Prevent leaks and jank; responsive layouts; safe teardown."
    },
    {
        "slug": "api-conventions",
        "title": "API Conventions",
        "description": "Correct status codes, response shapes, and API semantics."
    },
    {
        "slug": "module-architecture",
        "title": "Module Boundaries & Architecture",
        "description": "Clear module boundaries, decoupling, and managed deprecations."
    },
    {
        "slug": "security-hardening",
        "title": "Security Hardening",
        "description": "Sanitize and validate I/O; minimize attack surface."
    },
    {
        "slug": "performance-efficiency",
        "title": "Performance & Efficiency",
        "description": "Optimize hot paths, memory, and I/O for speed and cost."
    },
    {
        "slug": "maintainability",
        "title": "Maintainability",
        "description": "Centralize config, remove dead code, and ease future changes."
    },
    {
        "slug": "dependency-supply-chain",
        "title": "Dependency & Supply Chain",
        "description": "Pin versions, use digests/SBOMs, and enforce license policies."
    },
    {
        "slug": "secrets-credentials",
        "title": "Secrets & Credentials",
        "description": "Block secrets in code and enforce secure secret handling."
    },
    {
        "slug": "config-environment",
        "title": "Config & Environment",
        "description": "Validate required env/config at startup; fail fast on misconfig."
    },
    {
        "slug": "ci-cd-build-hygiene",
        "title": "CI/CD & Build Hygiene",
        "description": "Deterministic pipelines, caches, and reproducible builds."
    },
    {
        "slug": "container-docker-hygiene",
        "title": "Container & Docker Hygiene",
        "description": "Multi-stage builds, minimal bases, .dockerignore, and layer order."
    },
    {
        "slug": "infra-as-code",
        "title": "Infrastructure as Code",
        "description": "Secure, tagged, and consistent Terraform/K8s resources."
    },
    {
        "slug": "monorepo-hygiene",
        "title": "Monorepo Hygiene",
        "description": "Workspace boundaries, dependency rules, and build graph health."
    },
    {
        "slug": "pr-hygiene",
        "title": "PR Hygiene",
        "description": "Right-sized PRs with clear titles, descriptions, and checklists."
    },
    {
        "slug": "testing-quality",
        "title": "Testing & Quality",
        "description": "Meaningful tests, coverage signals, and fewer flakiness patterns."
    },
    {
        "slug": "migrations-backward-compat",
        "title": "Migrations & Backward Compatibility",
        "description": "Safe data/code migrations while preserving compatibility."
    },
    {
        "slug": "docs-adrs",
        "title": "Docs & ADRs",
        "description": "Require docs/ADRs for impactful changes and decisions."
    },
    {
        "slug": "privacy-pii",
        "title": "Privacy & PII",
        "description": "Minimize, mask, and retain personal data responsibly."
    },
    {
        "slug": "accessibility-a11y",
        "title": "Accessibility (A11y)",
        "description": "Accessible UI: labels, contrast, keyboard navigation."
    },
    {
        "slug": "internationalization-i18n",
        "title": "Internationalization (i18n)",
        "description": "No hardcoded strings; correct pluralization and fallbacks."
    },
    {
        "slug": "database-query-performance",
        "title": "Database & Query Performance",
        "description": "Avoid N+1s; use indexes; deterministic ordering."
    },
    {
        "slug": "resilience-retries-idempotency",
        "title": "Resilience (Retries & Idempotency)",
        "description": "Retries, timeouts, and idempotency for calls and jobs."
    },
    {
        "slug": "concurrency-safety",
        "title": "Concurrency Safety",
        "description": "Guard critical sections and prevent race conditions."
    },
    {
        "slug": "caching-strategy",
        "title": "Caching Strategy",
        "description": "Correct keys, TTLs, and invalidation for effective caches."
    },
    {
        "slug": "api-contracts-versioning",
        "title": "API Contracts & Versioning",
        "description": "Schema diffs and versioning to avoid breaking clients."
    },
    {
        "slug": "compliance-lgpd",
        "title": "LGPD Compliance",
        "description": "Code practices aligned with Brazilâ€™s LGPD privacy requirements."
    },
    {
        "slug": "compliance-gdpr",
        "title": "GDPR Compliance",
        "description": "Code practices aligned with EU GDPR and privacy by design."
    },
    {
        "slug": "compliance-soc2-essentials",
        "title": "SOC 2 Essentials",
        "description": "Logging, encryption, access, and auditability aligned to SOC 2."
    },
    {
        "slug": "compliance-pci-dss",
        "title": "PCI DSS Compliance",
        "description": "Protect cardholder data with encryption and segregation."
    },
    {
        "slug": "compliance-hipaa",
        "title": "HIPAA Compliance",
        "description": "Protect PHI with controls and auditable access."
    },
    {
        "slug": "stack-react",
        "title": "React (Stack)",
        "description": "React-specific best practices and common pitfalls."
    },
    {
        "slug": "stack-nextjs",
        "title": "Next.js (Stack)",
        "description": "SSR/SSG patterns, routing, and API best practices."
    },
    {
        "slug": "stack-vue",
        "title": "Vue (Stack)",
        "description": "Reactivity, props, and component hygiene in Vue."
    },
    {
        "slug": "stack-nodejs",
        "title": "Node.js (Stack)",
        "description": "Async, streams, and dependency hygiene in Node."
    },
    {
        "slug": "stack-php",
        "title": "PHP (Stack)",
        "description": "PHP/Laravel/Symfony patterns for safety and clarity."
    },
    {
        "slug": "stack-python",
        "title": "Python (Stack)",
        "description": "Typing, async, and env hygiene in Python/Django/FastAPI."
    },
    {
        "slug": "stack-flutter",
        "title": "Flutter (Stack)",
        "description": "Widget lifecycle, dispose, and state management."
    },
    {
        "slug": "web-static-assets",
        "title": "Web Assets & Performance",
        "description": "Optimize images/fonts; caching and delivery for fast apps."
    },
    {
        "slug": "docstring",
        "title": "Docstrings & Documentation Comments",
        "description": "Require structured docstrings or documentation comments for public APIs across supported languages (Python, JS/TS, Java, C#, Go, Rust). Must include purpose, parameters, return values, errors, and examples where applicable."
    }
]
