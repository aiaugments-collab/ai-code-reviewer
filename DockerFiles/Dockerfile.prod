ARG API_CLOUD_MODE=false

FROM node:22.14.0-slim AS deps

ARG API_CLOUD_MODE
ENV API_CLOUD_MODE=${API_CLOUD_MODE}
ENV API_DEVELOPMENT_MODE=false

ARG RELEASE_VERSION
ENV SENTRY_RELEASE=$RELEASE_VERSION
ENV NODE_OPTIONS="--max-old-space-size=4096"

WORKDIR /usr/src/app

RUN apt-get update && apt-get install -y ca-certificates git python3 make g++ && rm -rf /var/lib/apt/lists/*
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# -------------------------------------------------------------
FROM deps AS build

ARG API_CLOUD_MODE
ENV API_CLOUD_MODE=${API_CLOUD_MODE}
ENV API_DEVELOPMENT_MODE=false

WORKDIR /usr/src/app
COPY . .

RUN mkdir -p ee/configs/environment

# Gera o environment.ts substituindo o placeholder
RUN sed -e "s/__CLOUD_MODE__/${API_CLOUD_MODE}/g" -e "s/__DEVELOPMENT_MODE__/false/g" src/ee/configs/environment/environment.template.ts >src/ee/configs/environment/environment.ts

RUN yarn build:production

# -------------------------------------------------------------
FROM deps AS production

ARG API_CLOUD_MODE
ENV API_CLOUD_MODE=${API_CLOUD_MODE}

WORKDIR /usr/src/app
EXPOSE 3001

RUN apt-get update && apt-get install -y ca-certificates git python3 make g++ && rm -rf /var/lib/apt/lists/*

COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY package.json yarn.lock ./
COPY --from=build /usr/src/app/dist ./dist
COPY ecosystem.config.js ./
COPY default-kodus-config.yml ./default-kodus-config.yml
COPY tsconfig.json ./

RUN mkdir -p /usr/src/app/certs
RUN yarn global add pm2
RUN pm2 install pm2-logrotate
RUN pm2 set pm2-logrotate:max_size 30M
RUN pm2 set pm2-logrotate:retain 10

CMD ["pm2-runtime", "start", "ecosystem.config.js", "--env", "production"]
